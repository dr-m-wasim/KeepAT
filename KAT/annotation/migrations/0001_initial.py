# Generated by Django 5.2.1 on 2025-05-17 11:32

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Events',
            fields=[
                ('student_id', models.IntegerField(blank=True, null=True)),
                ('event_id', models.CharField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(blank=True, null=True)),
                ('claim', models.CharField(blank=True, null=True)),
                ('claim_url', models.CharField(blank=True, null=True)),
                ('post_url', models.CharField(blank=True, null=True)),
                ('label', models.CharField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Events',
                'db_table': 'events',
                'managed': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('event_id', models.CharField(blank=True, null=True)),
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('post_url', models.CharField(blank=True, null=True)),
                ('platform', models.CharField(blank=True, null=True)),
                ('title', models.CharField(blank=True, null=True)),
                ('student_label', models.CharField(blank=True, null=True)),
                ('img_vid_none', models.IntegerField(blank=True, null=True)),
                ('likes', models.CharField(blank=True, null=True)),
                ('post_timestamp', models.CharField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('views', models.CharField(blank=True, null=True)),
                ('shares', models.CharField(blank=True, null=True)),
                ('reposts', models.CharField(blank=True, null=True)),
                ('annotator1', models.CharField(blank=True, choices=[(0, 'Real'), (1, 'Fake')], max_length=10, null=True)),
                ('annotator2', models.CharField(blank=True, choices=[(0, 'Real'), (1, 'Fake')], max_length=10, null=True)),
                ('annotator3', models.CharField(blank=True, choices=[(0, 'Real'), (1, 'Fake')], max_length=10, null=True)),
            ],
            options={
                'db_table': 'posts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostsComments',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('post_id', models.IntegerField(blank=True, null=True)),
                ('text', models.CharField(blank=True, null=True)),
                ('user', models.CharField(blank=True, null=True)),
                ('likes', models.CharField(blank=True, null=True)),
                ('student_label', models.CharField(blank=True, null=True)),
                ('annotator1', models.CharField(blank=True, null=True)),
                ('annotator2', models.CharField(blank=True, null=True)),
                ('annotator3', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'posts_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostsUsers',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, null=True)),
                ('followers', models.CharField(blank=True, null=True)),
                ('followings', models.CharField(blank=True, null=True)),
                ('verified_unverfied', models.IntegerField(blank=True, null=True)),
                ('dp_url', models.CharField(blank=True, null=True)),
                ('posts_count', models.CharField(blank=True, null=True)),
                ('joining_date', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'posts_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'students',
                'managed': False,
            },
        ),
    ]
